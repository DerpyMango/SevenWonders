import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Arrays;
import java.util.Stack;

public abstract class WonderBoard {

    protected String location;
    protected HashMap<Integer, Cost> list;
    protected ArrayList<Integer> wRewards;
    protected int[] rewardKey;
    protected String resource;
    protected ArrayList VictoPoints;
    protected String ending;
    protected Iterator iter;
    protected int temp;
    protected String army;
    protected String pay;
    protected String coins;

    public WonderBoard()
    {
        coins = "0";
        pay = "";
        army = "";
        list = new HashMap<Integer, Cost>();
        VictoPoints = new ArrayList();
        ending = "";
        temp = 0;
        setRes();
        setLoc();
        wRewards = new ArrayList<Integer>();
        rewardKey = new int[3];
        addWonders();
        create();
    }

    public Cost returnWonderCost()
    {
        return list.get(rewardKey[wRewards.size()]);
    }

    public abstract void setRes();

    public int coins()
    {
        return Integer.parseInt(coins);
    }

    public String checkPay()
    {
        return pay;
    }

    public String getArmy()
    {
        return army;
    }

    public abstract void setLoc();

    public void create()
    {
        iter = list.entrySet().iterator();
    }

    public int numWonders()
    {
        return wRewards.size();
    }

    public String getLoc()
    {
        return location;
    }

    public abstract void addWonders();

    public abstract String toString();

    public abstract int getVictoPoints();

    public String getEnd()
    {
        return ending;
    }

    public ArrayList<Integer> getWRewards()
    {
        return wRewards;
    }

    public void build()
    {
        if (wRewards.size() > rewardKey.length)
            return;
        wRewards.add(rewardKey[wRewards.size()]);
        VictoPoints.add(rewardKey[wRewards.size()]);
    }
}
