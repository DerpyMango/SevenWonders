import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;

public class Player 
{
	private int coins, milLosses, milVic;
	private WonderBoard wb;
	private static final HashMap<String, Integer> ownedMap = new HashMap<String, Integer>() 
	{
		{
			put("wb", 0);
			put("resource", 1);
			put("military", 2);
			put("science", 3);
			put("commerce", 4);
			put("civil", 5);
			put("guild", 6);
			put("trade", 7);
		}
	};
	
	private static final HashMap<String, Integer> handMap = new HashMap<String, Integer>() 
	{
		{
			put("resource", 0);
			put("military", 1);
			put("science", 2);
			put("commerce", 3);
			put("civil", 4);
			put("guild", 5);
		}
	};
	
	private ArrayList<Card>[] ownedCards, hand;
	
	public Player()
	{
		ownedCards = (ArrayList<Card>[])(new ArrayList[8]);
		hand = (ArrayList<Card>[])(new ArrayList[6]);
		
		setCoins(3);
		setMilLosses(0);
		setMilVic(0);
	}
	
	public int getCoins()
	{
		return coins;
	}
	
	public int getMilLosses()
	{
		return milLosses;
	}
	
	public int getMilVics()
	{
		return milVic;
	}
	
	public ArrayList<Card>[] getHand()
	{
		return hand;
	}
	
	public ArrayList<Card>[] getOwnedCards()
	{
		return ownedCards;
	}
	
	private void setCoins(int c)
	{
		coins = c;
	}
	
	public void addCoins(int c)
	{
		coins += c;
	}
	
	private void setMilLosses(int ml)
	{
		milLosses = ml;
	}
	
	public void addMilLoss(int losses)
	{
		milLosses += losses;
	}
	
	private void setMilVic(int mv)
	{
		milVic = mv;
	}
	
	public void addMilVic(int vics)
	{
		milVic += vics;
	}
	
	public void setWonderBoard(WonderBoard w)
	{
		wb = w;
	}
	
	public void setHand(ArrayList<Card>[] h)
	{
		hand = h;
	}
	
	public boolean addToOwnedCards(Card c)
	{
		if (canAfford(c))
		{
			ownedCards[ownedMap.get(c.getType())].add(c);
			return true;
		}
		
		else
			return false;
		
	}
	
	public boolean canAfford(Card c)
	{
		ArrayList<Integer> rCopy = new ArrayList<Integer>(Arrays.asList(c.getCost().getRCost()));
		
		
		for (Card card : ownedCards[1])
		{
			
		}
	}
	
	
}
